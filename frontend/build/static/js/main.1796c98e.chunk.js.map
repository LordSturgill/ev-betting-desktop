{"version":3,"sources":["App.jsx","index.js"],"names":["App","bets","setBets","useState","fetchBets","async","res","axios","get","data","err","console","error","useEffect","interval","setInterval","clearInterval","React","createElement","style","padding","fontFamily","border","cellPadding","cellSpacing","map","bet","idx","key","team","sportsbook","odds","implied_prob","toFixed","color","ev","ReactDOM","createRoot","document","getElementById","render"],"mappings":"gLAmDeA,MA/Cf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,IAE3BC,EAAYC,UAChB,IACE,MAAMC,QAAYC,IAAMC,IAAI,0CAC5BN,EAAQI,EAAIG,MACZ,MAAOC,GACPC,QAAQC,MAAM,uBAAwBF,KAU1C,OANAG,oBAAU,KACRT,IACA,MAAMU,EAAWC,YAAYX,EAAW,KACxC,MAAO,IAAMY,cAAcF,IAC1B,IAGDG,IAAAC,cAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQC,WAAY,eACzCJ,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,SAAOI,OAAO,IAAIC,YAAY,KAAKC,YAAY,KAC7CP,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,UAAI,aAGRD,IAAAC,cAAA,aACGjB,EAAKwB,IAAI,CAACC,EAAKC,IACdV,IAAAC,cAAA,MAAIU,IAAKD,GACPV,IAAAC,cAAA,UAAKQ,EAAIG,MACTZ,IAAAC,cAAA,UAAKQ,EAAII,YACTb,IAAAC,cAAA,UAAKQ,EAAIK,MACTd,IAAAC,cAAA,WAAyB,IAAnBQ,EAAIM,cAAoBC,QAAQ,GAAG,KACzChB,IAAAC,cAAA,MAAIC,MAAO,CAAEe,MAAOR,EAAIS,GAAK,EAAI,QAAU,QAAUT,EAAIS,UCrC1DC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAOvB,IAAAC,cAAClB,EAAG","file":"static/js/main.1796c98e.chunk.js","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [bets, setBets] = useState([]);\n\n  const fetchBets = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/odds/positive_ev\");\n      setBets(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch bets\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchBets();\n    const interval = setInterval(fetchBets, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ padding: \"20px\", fontFamily: \"sans-serif\" }}>\n      <h1>Positive EV Bets</h1>\n      <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\n        <thead>\n          <tr>\n            <th>Team</th>\n            <th>Sportsbook</th>\n            <th>Odds</th>\n            <th>Implied Prob</th>\n            <th>+EV (%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {bets.map((bet, idx) => (\n            <tr key={idx}>\n              <td>{bet.team}</td>\n              <td>{bet.sportsbook}</td>\n              <td>{bet.odds}</td>\n              <td>{(bet.implied_prob * 100).toFixed(1)}%</td>\n              <td style={{ color: bet.ev > 0 ? \"green\" : \"red\" }}>{bet.ev}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}